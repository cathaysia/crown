use super::*;

#[test]
fn test_rc6_encrypt_decrypt() {
    let testcase: [(&[u8], &[u8], &[u8]); 3] = [
        (
            &[
                0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56,
                0x67, 0x78,
            ],
            &[
                0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x8a, 0x9b, 0xac, 0xbd, 0xce, 0xdf,
                0xe0, 0xf1,
            ],
            &[
                0x52, 0x4e, 0x19, 0x2f, 0x47, 0x15, 0xc6, 0x23, 0x1f, 0x51, 0xf6, 0x36, 0x7e, 0xa4,
                0x3f, 0x18,
            ],
        ),
        (
            &[
                0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56,
                0x67, 0x78, 0x89, 0x9a, 0xab, 0xbc, 0xcd, 0xde, 0xef, 0xf0,
            ],
            &[
                0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x8a, 0x9b, 0xac, 0xbd, 0xce, 0xdf,
                0xe0, 0xf1,
            ],
            &[
                0x68, 0x83, 0x29, 0xd0, 0x19, 0xe5, 0x05, 0x04, 0x1e, 0x52, 0xe9, 0x2a, 0xf9, 0x52,
                0x91, 0xd4,
            ],
        ),
        (
            &[
                0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0x01, 0x12, 0x23, 0x34, 0x45, 0x56,
                0x67, 0x78, 0x89, 0x9a, 0xab, 0xbc, 0xcd, 0xde, 0xef, 0xf0, 0x10, 0x32, 0x54, 0x76,
                0x98, 0xba, 0xdc, 0xfe,
            ],
            &[
                0x02, 0x13, 0x24, 0x35, 0x46, 0x57, 0x68, 0x79, 0x8a, 0x9b, 0xac, 0xbd, 0xce, 0xdf,
                0xe0, 0xf1,
            ],
            &[
                0xc8, 0x24, 0x18, 0x16, 0xf0, 0xd7, 0xe4, 0x89, 0x20, 0xad, 0x16, 0xa1, 0x67, 0x4e,
                0x5d, 0x48,
            ],
        ),
    ];

    for (key, pt, ct) in testcase {
        let k = Rc6::new(key, 0);
        let x = k.encrypt(pt).unwrap();
        assert_eq!(x, ct);
        let y = k.decrypt(&x).unwrap();
        assert_eq!(pt, y);
    }
}
